Instructions for compiling each program:

Assembly (assembly):
$ nasm -f elf32 main.asm -o main.o
$ gcc -m32 main.o -o main
$ ./main
IMPORTANT: This code only works on Linux and requires NASM to run. Additionally, the program will very likely crash if inputs are not handled correctly. While I made this program to show some of my knowledge with assembly, it is extremely bare-bones.

C (c):
$ gcc -o connect4 main.c
$ ./connect4

C# with .NET (c#):
$ csc main.cs
$ main.exe

C++ (c++):
$ g++ -o connect4 main.cpp
$ ./connect4

Fortran (fortran):
$ gfortran -o ConnectFour main.f90
$ ./ConnectFour

Golang (golang):
$ go run main.go

Haskell (haskell):
$ ghc -o ConnectFour main.hs
$ ./ConnectFour

Java (java):
$ javac Main.java
$ java Main

Java with SpringBoot (java/springboot):
Code documentation only, see the directory README for more information

JavaScript with HTML5 & CSS3 (javascript/html-css):
$ python -m http.server
Then visit the link http://localhost:8000/index.html

JavaScript with MySQL (javascript/mysql):
$ node main.js

JavaScript with MongoDB & NoSQL (javascript/mongodb-nosql):
$ node main.js

JavaScript with Next.js (javascript/next):
$ npm run dev
Then visit the link http://localhost:3000/main

JavaScript with Node.js (javascript/node):
$ node main.js

JavaScript with Vue.js (javascript/vue):
$ yarn serve
Then visit the link http://localhost:8080

Kotlin (kotlin):
$ kotlinc main.kt -include-runtime -d main.jar
$ java -jar main.jar

Objective-C (objective-c):
$ clang -framework Foundation main.m -o ConnectFour
$ ./ConnectFour

Perl (perl):
$ perl main.pl

PHP (php):
$ php main.php

Python (python):
$ python main.py

Python with JSON (python):
$ python main.py

Ruby (ruby):
$ ruby main.rb

Rust (rust):
$ rustc main.rs
$ ./main

Scala (scala):
$ scala main.scala

Swift (swift):
$ swift main.swift

TypeScript with Angular (typescript/angular):
$ ng serve --open

TypeScript with Node.js (typescript/node):
$ tsc main.ts
$ node main.js